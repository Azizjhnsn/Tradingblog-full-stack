This is not actually something I learned but
 I understood that I have been working most about rendering for the past few mounths
  with express using express-ejs-layouts and with react js 
  now I'll segment them and only do anything relatted to rendering with react
   and use express only for backend so spend les time using coplicated ejs-layouts


Mongoose is nonrelational therefore can't link different tables together that iis why 
I used express session to store user name in order to know which user posted what

we always set express session parameter(or jwt ) in the app.js

mongoDB records Ids are a random st of characterfa-spin

we set timestamps to true whenever we want to keep track of when data has been added or updated in the database since mongoDB
does not have automating date & time recording like mysql

Todays task will be to change the ejs posts page in order to manually upload content and then connect the data updating function with our database

So to do that ill first use ejs to create a variable that will hold the text of our update 
Then clone the html element that holds the text content and all it s design
And then pass in the varible that holds our input via ejs

The middleware for data retrieval is storing the data in an array of object 

Able to access the post data from the db with the middleware

Updated the login system for case sensitiveness

Tryng to upate the ejs file

 learned that we use multer libreary for file upload

 And I can now add files to the server 

 The way I was writing code in my controller file was wrong because I put everythin in an object

 I should not use a middeware to retrieve the data

 The reason why I was not seing the data in the variables reflect in my eja file was because my variables were inside of a function and then I wanted
 to access it outside of the function.

 I then made the variables global but it still wasn't working 

 The reason was because my function was asyncronous and I called it outside of the try & catch so I had to rap it up inside the try & catch
 so that it will await for the data being retrieved in the datbase  to assign it to the variable I passed in my app.get function

 My first idea of looking for the last post in the db was a lil bit compicated to pull and not the best way to do it
 Instead I just looped through the array of the database and dispay each element of it that I need
 where and when I need it.


 Get few posts on the homepage.
 Organize posts in order.
 Get the date to apear
 Organize posts by importance
 update & delete

 Add update and delete button on each post 

To do:

 Update
 Find out how to access the Id's of posts oncick event
 and access the content of specified content to put them bach in the fields that woll popup
 and last use update to change the content in the db to the new content
 

Delete 
Access id of content with button 
And delete the whole record from db 

Sort posts

Add a picturre to a post